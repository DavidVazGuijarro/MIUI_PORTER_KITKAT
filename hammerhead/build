#!/bin/bash

#cleanup
clear;

echo "***************************************";
echo "         Thanks to iBotPeaches         ";
echo "              and datagutt             ";
echo "***************************************";

#setup vars
dir=$PWD;
phone="hammerhead";
version="4.3.16-FixRIL";

#helper vars
miui_path="$dir/raw_miui";
cm_path="$dir/raw_cm";
port_path="$dir/port";
SIGN_TARGET_FILES_APKS="$dir/../tools/releasetools/sign_target_files_apks";
APKCERTS="$dir/apkcerts.txt";

#cleanup
if [ -d $dir/wip ]; then
    cd $dir/wip;
    rm -rf *;
else
   mkdir -p $dir/wip;
fi

#cleanup
if [ -d $dir/COMPLETED_ZIPS ]; then
    cd $dir/COMPLETED_ZIPS;
    rm -rf *;
else
   mkdir -p $dir/COMPLETED_ZIPS;
fi

#Check for MIUI & CM
if [ ! -f $dir/raw_cm/boot.img ]; then
   echo "Missing CM Rom. Please drop CM rom (unzipped) into raw_cm";
   exit;
fi

if [ ! -d $dir/raw_miui/system ]; then
   echo "Missing MIUI Rom. Please drop MIUI rom (unzipped) into raw_miui";
   exit;
fi

#move CM base to port folder
if [ -d $dir/port ]; then
    rm -rf $dir/port;
fi

mkdir -p $dir/port

#begin copy
cd $dir/raw_cm;
cp -aRf * ../port;

#delete CM specific stuff
rm -rf $dir/port/system/framework/*;
rm -rf $dir/port/system/priv-app/*;
rm -rf $dir/port/system/app/*;
rm -rf $dir/port/system/font/*;
rm -rf $dir/port/system/media/*;

## BEGIN COPY OF MIUI FILES

#libs
cp -aRf $miui_path/system/lib/libffmpeg_xm.so $port_path/system/lib/libffmpeg_xm.so;
cp -aRf $miui_path/system/lib/libffplayer_jni.so $port_path/system/lib/libffplayer_jni.so;
cp -aRf $miui_path/system/lib/libimageprocessor_jni.so $port_path/system/lib/libimageprocessor_jni.so;
cp -aRf $miui_path/system/lib/libjni_resource_drm.so $port_path/system/lib/libjni_resource_drm.so;
cp -aRf $miui_path/system/lib/libpatcher_jni.so $port_path/system/lib/libpatcher_jni.so;
cp -aRf $miui_path/system/lib/libMiuiGalleryJNI.so $port_path/system/lib/;
cp -aRf $miui_path/system/lib/libNativeApi.so $port_path/system/lib/;
cp -aRf $miui_path/system/lib/libDmplayer.so $port_path/system/lib/;
cp -aRf $miui_path/system/lib/libjni_googlepinyinime_latinime_5.so $port_path/system/lib/;
# Fix external sdcard support
cp -aRf $miui_path/system/lib/libdrmframework_jni.so $port_path/system/lib/libdrmframework_jni.so;
cp -aRf $miui_path/system/lib/libmedia_jni.so $port_path/system/lib/libmedia_jni.so;
cp -aRf $miui_path/system/lib/libmtp.so $port_path/system/lib/libmtp.so;
# MIUI V6
cp -aRf $miui_path/system/lib/libmiui_chromium.so $port_path/system/lib/libmiui_chromium.so;
cp -aRf $miui_path/system/lib/libmiuiloader.so $port_path/system/lib/libmiuiloader.so;
cp -aRf $miui_path/system/lib/libmiuiimageutilities.so $port_path/system/lib/libmiuiimageutilities.so;
cp -aRf $miui_path/system/lib/libmiuinative.so $port_path/system/lib/libmiuinative.so;
cp -aRf $miui_path/system/lib/libmiuiclassproxy.so $port_path/system/lib/libmiuiclassproxy.so;
cp -aRf $miui_path/system/lib/libFindRect.so $port_path/system/lib/libFindRect.so;

#etc - permissions
#cp -aRf $miui_path/system/etc/permissions/com.google.android.maps.xml $port_path/system/etc/permissions/com.google.android.maps.xml;

#bin
cp -aRf $miui_path/system/bin/iptables $port_path/system/bin/iptables;
# the rest of MIUI
cp -aRf $miui_path/system/app/* $port_path/system/app/;
cp -aRf $miui_path/system/priv-app/* $port_path/system/priv-app/;
cp -aRf $miui_path/system/framework/* $port_path/system/framework/;
cp -aRf $miui_path/system/fonts/* $port_path/system/fonts/;
cp -aRf $miui_path/system/media/* $port_path/system/media/;
# Replace LatinIME, because it will fc with the MIUI one
rm $port_path/system/app/GooglePinyinIME.apk;
rm $port_path/system/app/LatinIme.apk;
cp $cm_path/system/app/LatinIME.apk $port_path/system/app/;
# Replace NFC
#cp $cm_path/system/app/NfcNci.apk $port_path/system/app/NfcNci.apk;

## Use prebuilt updater.script & build.prop
## Saves about 200 lines of bash. (Those reserved for MIUI Build Scripts)
## Copy everything that is pre-made
cp -aRf $dir/move_over/* $port_path/;

## BEGIN DECOMPILE
mkdir -p $dir/wip/jars/miui;
mkdir -p $dir/wip/jars/cm;
mkdir -p $dir/wip/apks;

# IF the frameworks
for file in $port_path/system/framework/*.apk; do
  $dir/../tools/apktool if $file;
done
$dir/../tools/apktool if $port_path/system/app/miui.apk;

# decompile jars that need smali editing
$dir/../tools/apktool d --no-debug-info $port_path/system/framework/services.jar   -o $dir/wip/jars/miui/services.jar.out
$dir/../tools/apktool d --no-debug-info $port_path/system/framework/framework.jar -o $dir/wip/jars/miui/framework.jar.out
$dir/../tools/apktool d --no-debug-info $port_path/system/framework/android.policy.jar -o $dir/wip/jars/miui/android.policy.jar.out
$dir/../tools/apktool d --no-debug-info $port_path/system/framework/telephony-common.jar -o $dir/wip/jars/miui/telephony-common.jar.out
$dir/../tools/apktool d --no-debug-info $cm_path/system/framework/services.jar  -o $dir/wip/jars/cm/services.jar.out
$dir/../tools/apktool d --no-debug-info $cm_path/system/framework/framework.jar -o $dir/wip/jars/cm/framework.jar.out
$dir/../tools/apktool d --no-debug-info $cm_path/system/framework/android.policy.jar -o $dir/wip/jars/cm/android.policy.jar.out
$dir/../tools/apktool d --no-debug-info $cm_path/system/framework/telephony-common.jar -o $dir/wip/jars/cm/telephony-common.jar.out

#decompile APKs that need editing.
$dir/../tools/apktool d --no-src $port_path/system/framework/framework-res.apk -o $dir/wip/apks/framework-res.apk
#$dir/../tools/apktool d --no-src $port_path/system/app/LBESEC_MIUI.apk -o $dir/wip/apks/LBESEC_MIUI.apk
$dir/../tools/apktool d $port_path/system/priv-app/Settings.apk -o $dir/wip/apks/Settings.apk
#$dir/../tools/apktool d $port_path/system/priv-app/MiuiSystemUI.apk -o $dir/wip/apks/MiuiSystemUI.apk
#$dir/../tools/apktool d $port_path/system/app/MiuiHome.apk -o $dir/wip/apks/MiuiHome.apk
$dir/../tools/apktool d $port_path/system/app/DownloadProviderUi.apk -o $dir/wip/apks/DownloadProviderUi.apk

#lets merge smali that is just direct merge
# USING MIUI FOLDER AS LIVE

#kudos to Tejh for doing the long hours part
wip_cm=$dir/wip/jars/cm;
wip_miui=$dir/wip/jars/miui;

#auto merge framework
cp -aRf $wip_cm/framework.jar.out/smali/android/os/PowerManager*.smali $wip_miui/framework.jar.out/smali/android/os/;
cp -aRf $wip_cm/framework.jar.out/smali/android/hardware/Camera*.smali $wip_miui/framework.jar.out/smali/android/hardware/;

#cp -aRf $wip_cm/framework.jar.out/smali/android/content/res/PackageRedirectionMap*.smali $wip_miui/framework.jar.out/smali/android/content/res/

cp -aRf $wip_cm/telephony-common.jar.out/smali/com/android/internal/telephony/BaseCommands.smali $wip_miui/telephony-common.jar.out/smali/com/android/internal/telephony/BaseCommands.smali
cp -aRf $wip_cm/telephony-common.jar.out/smali/com/android/internal/telephony/PhoneFactory.smali $wip_miui/telephony-common.jar.out/smali/com/android/internal/telephony/PhoneFactory.smali
cp -aRf $wip_cm/telephony-common.jar.out/smali/com/android/internal/telephony/RIL*.smali $wip_miui/telephony-common.jar.out/smali/com/android/internal/telephony/;
cp -aRf $wip_cm/telephony-common.jar.out/smali/com/android/internal/telephony/Samsung*.smali $wip_miui/telephony-common.jar.out/smali/com/android/internal/telephony/;

cp -aRf $wip_cm/framework.jar.out/smali/android/telephony/CellSignalStrength*.smali $wip_miui/framework.jar.out/smali/android/telephony/;
cp -aRf $wip_cm/framework.jar.out/smali/android/telephony/SignalStrength*.smali $wip_miui/framework.jar.out/smali/android/telephony/;

cp -aRf $wip_cm/framework.jar.out/smali/android/net/wifi/WifiChannel.smali $wip_miui/framework.jar.out/smali/android/net/wifi/;
cp -aRf $wip_cm/framework.jar.out/smali/android/net/wifi/WifiNative.smali $wip_miui/framework.jar.out/smali/android/net/wifi/;
cp -aRf $wip_cm/framework.jar.out/smali/android/os/IPowerManager*.smali $wip_miui/framework.jar.out/smali/android/os/;
cp -aRf $wip_cm/framework.jar.out/smali/android/os/SystemProperties.smali $wip_miui/framework.jar.out/smali/android/os/;
cp -aRf $wip_cm/framework.jar.out/smali/android/view/inputmethod/InputMethodInfo*.smali $wip_miui/framework.jar.out/smali/android/view/inputmethod/;
cp -aRf $wip_cm/framework.jar.out/smali/android/media/AudioFormat.smali $wip_miui/framework.jar.out/smali/android/media/;
#cp -aRf $wip_cm/framework.jar.out/smali/android/nfc/* $wip_miui/framework.jar.out/smali/android/nfc/;

#cp -aRf $wip_cm/services.jar.out/smali/com/android/server/input/InputManagerService$\ChainedInputFilterHost.smali $wip_miui/services.jar.out/smali/com/android/server/input/;
cp -aRf $wip_cm/services.jar.out/smali/com/android/server/location/GpsLocationProvider.smali $wip_miui/services.jar.out/smali/com/android/server/location/

#move over merges for apk and smali
cp -aRf $dir/random_apk_fixes/* $dir/wip/apks/;
cp -aRf $dir/random_smali_fixes/android.policy.jar.out/* $wip_miui/android.policy.jar.out/;

echo "Auto merge complete. Time for manual merges :/";

#manual diff
echo "Merge nativeSetStylusIconEnabled()";
sleep 1;
meld $wip_cm/services.jar.out/smali/com/android/server/input/InputManagerService.smali $wip_miui/services.jar.out/smali/com/android/server/input/InputManagerService.smali;

echo "Merge nativeCpuBoost"
sleep 4;
meld $wip_cm/services.jar.out/smali/com/android/server/power/PowerManagerService.smali $wip_miui/services.jar.out/smali/com/android/server/power/PowerManagerService.smali;

#echo "Patch FileUtils"
#sleep 4;
#meld $wip_cm/framework.jar.out/smali/android/os/FileUtils.smali #$wip_miui/framework.jar.out/smali/android/os/FileUtils.smali;

echo "Merge getLte* and toggleMobileNetwork"
sleep 4;
meld $wip_cm/framework.jar.out/smali/android/telephony/TelephonyManager.smali $wip_miui/framework.jar.out/smali/android/telephony/TelephonyManager.smali;

#mod some apks
#echo "Doing haxxx"
#sleep 4;
#sed -i '' 's/package="miui"/ \
#package="com.android.systemui"/' $dir/wip/apks/MiuiSystemUI.apk/AndroidManifest.xml;
#sed -i '' 's/package="miui"/ \
#package="com.miui.home"/' $dir/wip/apks/MiuiHome.apk/AndroidManifest.xml;

echo "OK, lets do framework-res"
echo "First, set voice_capable and sms_capable to true"
sleep 4;
nano $dir/wip/apks/framework-res.apk/res/values/bools.xml;
echo "Then replace networkAttributes with:
<item>wifi,1,1,1,-1,true</item>
<item>mobile,0,0,0,-1,true</item>
<item>mobile_mms,2,0,2,60000,true</item>
<item>mobile_supl,3,0,2,60000,true</item>
<item>mobile_dun,4,0,2,60000,true</item>
<item>mobile_hipri,5,0,3,60000,true</item>
<item>mobile_fota,10,0,2,60000,true</item>
<item>mobile_ims,11,0,2,60000,true</item>
<item>mobile_cbs,12,0,2,60000,true</item>
<item>mobile_ia,14,0,2,-1,true</item>
<item>bluetooth,7,7,2,-1,true</item>

Replace radioAttributes with:
<item>1,1</item>
<item>0,1</item>
<item>7,1</item>
"
sleep 6;
nano $dir/wip/apks/framework-res.apk/res/values/arrays.xml;
echo "Finished with framework-res"

echo "Everything is done :) Rebuilding now....";

##START THE REBUILD - apks
$dir/../tools/apktool b $dir/wip/apks/Settings.apk
$dir/../tools/apktool b $dir/wip/apks/DownloadProviderUi.apk
#$dir/../tools/apktool b $dir/wip/apks/MiuiSystemUI.apk
#$dir/../tools/apktool b $dir/wip/apks/MiuiHome.apk
#$dir/../tools/apktool b $dir/wip/apks/LBESEC_MIUI.apk
$dir/../tools/apktool b $dir/wip/apks/framework-res.apk
$dir/../tools/apktool b $dir/wip/jars/miui/services.jar.out
$dir/../tools/apktool b $dir/wip/jars/miui/framework.jar.out
$dir/../tools/apktool b $dir/wip/jars/miui/android.policy.jar.out
$dir/../tools/apktool b $dir/wip/jars/miui/telephony-common.jar.out

#lets merge this back into the main APKs / JARs
7za u -mx0 -tzip $dir/port/system/framework/android.policy.jar $dir/wip/jars/miui/android.policy.jar.out/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/framework/telephony-common.jar $dir/wip/jars/miui/telephony-common.jar.out/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/framework/services.jar $dir/wip/jars/miui/services.jar.out/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/framework/framework.jar $dir/wip/jars/miui/framework.jar.out/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/priv-app/Settings.apk $dir/wip/apks/Settings.apk/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/priv-app/Settings.apk $dir/wip/apks/Settings.apk/build/apk/resources.arsc > /dev/null;
7za u -mx0 -tzip $dir/port/system/priv-app/Settings.apk $dir/wip/apks/Settings.apk/build/apk/res > /dev/null;

7za u -mx0 -tzip $dir/port/system/priv-app/MiuiSystemUI.apk $dir/wip/apks/MiuiSystemUI.apk/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/priv-app/MiuiSystemUI.apk $dir/wip/apks/MiuiSystemUI.apk/build/apk/resources.arsc > /dev/null;
7za u -mx0 -tzip $dir/port/system/priv-app/MiuiSystemUI.apk $dir/wip/apks/MiuiSystemUI.apk/build/apk/res > /dev/null;

7za u -mx0 -tzip $dir/port/system/app/MiuiHome.apk $dir/wip/apks/MiuiHome.apk/build/apk/classes.dex > /dev/null;
7za u -mx0 -tzip $dir/port/system/app/MiuiHome.apk $dir/wip/apks/MiuiHome.apk/build/apk/resources.arsc > /dev/null;
7za u -mx0 -tzip $dir/port/system/app/MiuiHome.apk $dir/wip/apks/MiuiHome.apk/build/apk/res > /dev/null;

7za u -mx0 -tzip $dir/port/system/app/DownloadProviderUi.apk $dir/wip/apks/DownloadProviderUi.apk/build/apk/resources.arsc > /dev/null;
#7za u -mx0 -tzip $dir/port/system/app/LBESEC_MIUI.apk $dir/wip/apks/#LBESEC_MIUI.apk/build/apk/AndroidManifest.xml > /dev/null;
7za u -mx0 -tzip $dir/port/system/framework/framework-res.apk $dir/wip/apks/framework-res.apk/build/apk/res > /dev/null;
7za u -mx0 -tzip $dir/port/system/framework/framework-res.apk $dir/wip/apks/framework-res.apk/build/apk/resources.arsc > /dev/null;

#Lets zipalign these bastards.

#for file in $dir/port/system/app/*.apk; do
#  $dir/../tools/zipalign 4 $file $file.zipalligned;
#  echo "Zipaligned $(basename $file);";
#done;

#for file in $dir/port/system/app/*.apk; do
#   rm -rf $file;
#   mv $file.zipalligned $file;
#done;

#for file in $dir/port/system/priv-app/*.apk; do
#  $dir/../tools/zipalign 4 $file $file.zipalligned;
#  echo "Zipaligned $(basename $file);";
#done;

#for file in $dir/port/system/priv-app/*.apk; do
#   rm -rf $file;
#   mv $file.zipalligned $file;
#done;

echo "Signing with correct keys";

# If you run this, you must add DeviceSettings cert into the flie afterwards
#dir=$dir $dir/../tools/build_apkcerts.sh

# Zip this guy
cd $dir/port/;
rm -rf $dir/COMPLETED_ZIPS/miui_un*.zip;
zip -r $dir/COMPLETED_ZIPS/miui_unsigned.zip * > /dev/null
echo "ZIP Complete. Signing now...";

#delete same name, old zip if there.
if [ -f $dir/COMPLETED_ZIPS/miuiandroid_$phone-$version.zip ]; then
   rm -rf $dir/COMPLETED_ZIPS/miuiandroid_$phone-$version.zip;
fi

#Sign the zip.
java -Xmx2048m -jar $dir/../tools/signapk.jar -w $dir/../tools/security/testkey.x509.pem $dir/../tools/security/testkey.pk8 $dir/COMPLETED_ZIPS/miui_unsigned.zip $dir/COMPLETED_ZIPS/miuiandroid_$phone-$version.zip;

#cleanup
rm -rf $dir/COMPLETED_ZIPS/miui_un*.zip;
